pipeline {

  environment {
    dockerImageDockerDemoName = "tungktpm1/docker-demo"
    dockerImageConnectAppName = "tungktpm1/connect-app"
    dockerfileDockerDemo = "DockerDemo/Dockerfile"
    dockerfileConnectApp = "ConnectApp/Dockerfile"
    dockerImageDockerDemo = ""
    dockerImageConnectApp = ""
    dockerTag = "latest"
  }

  agent any

  stages {

    stage('Checkout Source') {
      steps {
        git 'https://github.com/NguyenVanTung11041998/DemoDocker.git'
      }
    }

    stage('Build image') {
      steps{
        script {
          dockerImageDockerDemo = docker.build("${dockerImageDockerDemoName}:${dockerTag}", "-f ${dockerfileDockerDemo} .")
          
          dockerImageConnectApp = docker.build("${dockerImageConnectAppName}:${dockerTag}", "-f ${dockerImageConnectAppName} .")
        }
      }
    }

    stage('Logout Docker Hub') {
      steps{
        script {
          sh 'docker logout'
        }
      }
    }

    stage('Pushing Image') {
      environment {
        registryCredential = 'dockerhublogin'
      }
      
      steps{
        script {
          docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) {
            dockerImageDockerDemo.push()

            dockerImageConnectApp.push()
          }
        }
      }
    }

    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "demo-build-app.yaml", kubeconfigId: "kubernetes")
          
          kubernetesDeploy(configs: "expose-app-connect.yaml", kubeconfigId: "kubernetes")
        }
      }
    }
  }
}