apiVersion: v1
kind: Namespace
metadata:
  name: docker-demo-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-docker-service
  namespace: demoapp
spec:
  selector:
    matchLabels:
      app: demo-docker-service
  replicas: 3
  template:
    metadata:
      labels:
        app: demo-docker-service
    spec:
      containers:
        - name: demo-docker-service
          image: "docker.io/tungktpm1/docker-demo:latest"
          imagePullPolicy: Always
          env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Development
          - name: ASPNETCORE_URLS
            value: http://0.0.0.0:80
          - name: JaegerIp
            value: "localhost"
          - name: ConnectionStrings__Default
            value: server=172.24.16.1;user=demo;password=1q2w3E4*;database=demo
          - name: MongoDbConfig__MongoDb
            value: mongodb://admin:admin@mongo-service:27017
          ports:
            - name: http
              containerPort: 80
        - name: jaeger-agent
          image: jaegertracing/jaeger-agent:latest
          ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          command:
            - "/go/bin/agent-linux"
            - "--reporter.grpc.host-port=172.24.16.1:14250"
          resources:
            limits:
              memory: 50M
              cpu: 100m
            requests:
              memory: 50M
              cpu: 100m

---
kind: Service
apiVersion: v1
metadata:
  name: demo-docker-service
  namespace: demoapp
spec:
  type: NodePort
  selector:
    app: demo-docker-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: http
    nodePort: 31212