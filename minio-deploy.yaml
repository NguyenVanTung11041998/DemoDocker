apiVersion: v1
kind: Namespace
metadata:
  name: minio
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
  # name: minio-pv
  # namespace: minio
  # labels:
    # disk: pvc
    # app: minio
# spec:
  # storageClassName: minio-pv
  # capacity:
    # storage: 200Gi
  # accessModes:
    # - ReadWriteMany
  # volumeMode: Filesystem
  # nfs:
    # path: /c/miniodata
    # server: 172.24.16.1
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
  # name: minio-pvc
  # namespace: minio
  # labels:
    # disk: pvc
    # app: minio
# spec:
  # accessModes:
    # - ReadWriteMany
  # resources:
    # requests:
      # storage: 200G
  # storageClassName: minio-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
      # - name: storage
        # persistentVolumeClaim:
          # claimName: minio-pvc
        - name: "storage"
          hostPath:
            path: "/run/desktop/mnt/host/c/Users/hanv/Desktop/data"
      containers:
      - name: minio
        image: minio/minio:edge
        args:
        - server
        - --console-address
        - :31606
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: "admin"
        - name: MINIO_SECRET_KEY
          value: "Smas#2020"
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: "/data"
---
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  namespace: minio
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      nodePort: 31606
  selector:
    app: minio