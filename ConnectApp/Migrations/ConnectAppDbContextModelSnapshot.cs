// <auto-generated />
using System;
using ConnectApp.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConnectApp.Migrations
{
    [DbContext(typeof(ConnectAppDbContext))]
    partial class ConnectAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("ConnectApp.Entities.SampleA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("SampleAs");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SampleAId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SampleAId");

                    b.ToTable("SampleBs");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SampleBId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("SampleCId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SampleBId");

                    b.HasIndex("SampleCId");

                    b.ToTable("SampleCs");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SampleCId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SampleCId");

                    b.ToTable("SampleDs");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleB", b =>
                {
                    b.HasOne("ConnectApp.Entities.SampleA", "SampleA")
                        .WithMany("SampleBs")
                        .HasForeignKey("SampleAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SampleA");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleC", b =>
                {
                    b.HasOne("ConnectApp.Entities.SampleB", "SampleB")
                        .WithMany("SampleCs")
                        .HasForeignKey("SampleBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectApp.Entities.SampleC", null)
                        .WithMany("SampleCs")
                        .HasForeignKey("SampleCId");

                    b.Navigation("SampleB");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleD", b =>
                {
                    b.HasOne("ConnectApp.Entities.SampleC", "SampleC")
                        .WithMany()
                        .HasForeignKey("SampleCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SampleC");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleA", b =>
                {
                    b.Navigation("SampleBs");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleB", b =>
                {
                    b.Navigation("SampleCs");
                });

            modelBuilder.Entity("ConnectApp.Entities.SampleC", b =>
                {
                    b.Navigation("SampleCs");
                });
#pragma warning restore 612, 618
        }
    }
}
